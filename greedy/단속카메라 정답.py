# 해설
# 첫 번째 카메라는 첫 번째로 차가 빠져나가는 지점에 설치해야 합니다. 왜냐하면 이 지점에서 설치하지 않으면 첫 번째로 빠져나가는 차는 찍을 수 없기 때문입니다. 그 지점에 카메라를 설치하면 해당 지점을 지나는 차들은 모두 카메라에 찍히게 되므로 더 이상 신경 쓸 필요가 없습니다.
# 두 번째 카메라는 아직 카메라에 찍히지 않은 차 중에서 첫 번째로 차가 빠져나가는 지점에 설치하면 됩니다. 두 번째 지점에 카메라를 설치하면 해당 지점을 지나는 차량들은 모두 찍히게 되므로 더 이상 신경 쓸 필요가 없습니다.
# 이런 식으로 계속 해서 카메라를 설치하는 과정을 거치면 됩니다. 요점은, 카메라가 설치 되었을 때, 더 이상 신경쓰지 않아도 되는 차량들을 확실하게 고려하지 않는 방식으로 프로그래밍을 해야 한다는 것입니다.
def solution(routes):
    answer = 0
    # 진출이 가장 작은 것으로 정렬
    # 여기서 진출로 정렬한 것은 순서의 의미가 아니라 범위를 정하기 위함으로 생각하면 될듯
    routes.sort(key=lambda x : x[1])
    while routes :
        # 진출이 가장 빠른 것 중 첫번쨰 진출을 선택
        position = routes[0][1]
        for x in routes[:]:
            #첫번째 진출보다 작은 모든 진입들을 리스트에서 삭제함
            #==진입이 첫번째 진출보다 작은
            #==첫번째 진출 카메라에 모두 찍히는 
            if x[0] <= position :
                routes.remove(x)

        # 진출 시점에 카메라를 설치했으므로 +1
        answer += 1
        # 이후 while문으로 다음 번째 진출을 선택해서 반복수행
    return answer